1- Algorithmic Challenge


Problem statement:

As a future ProDoctivity Development Team's member you are challenged to implement Quine–McCluskey's algorithm ( see: http://en.wikipedia.org/wiki/Quine%E2%80%93McCluskey_algorithm ) in any given .NET language ( except Visual Basic.NET ) OR Scala OR Javascript

You should be able to provide a interface that fulfills the following:

solveQuineMcCluskey (expression: string) : string


your function receives an expression of the form:

(example)
A'BC'D'+AB'C'D'+AB'CD'+AB'CD+ABC'D'+ABCD

Bonus points:

You get extra bonus points if your expression can take any form:

(example)
AB(C+D')+A(B+D)


Returns:

Your function returns an expanded expression that is minimized by Quine-McCluskey's Algoritm:
(example)

BC'D'+AB'+AC


notes:
- input and output strings contains no spaces.
- variables are of the form [A-Z]. Assume no further than Z is allowed.

